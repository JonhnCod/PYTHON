public static List<Empregado> listarEmpregadoInativo() throws Exception {
		
		List<Empregado> lista = new ArrayList<Empregado>();
		Connection conn = Banco.getConexao();
		String sql = "SELECT * FROM Empregado WHERE desligamento IS NOT NULL ORDER BY nome";
		PreparedStatement prepStmt = conn.prepareStatement(sql);
		ResultSet rs = prepStmt.executeQuery();
		while (rs.next()) {
			String matricula = rs.getString("matricula");
			String nome = rs.getString("nome");
			Date admissao = rs.getDate("admissao");
			Date desligamento = rs.getDate("desligamento");
			Double salario = rs.getDouble("salario");
			Empregado emp = new Empregado(matricula, nome, admissao, desligamento, salario);
			lista.add(emp);
		}
		rs.close();
		prepStmt.close();
		return lista;
	}
	
	
	@GET
	@Produces(MediaType.APPLICATION_JSON)
	public Response listarEmpregadosInativo() throws Exception {
		List<Empregado> lista = Banco.listarEmpregadoInativo();		
		GenericEntity<List<Empregado>> entity = new GenericEntity<List<Empregado>>(lista) {};
		return Response.ok().entity(entity).build();
	}
	
	@GET
	@Produces(MediaType.APPLICATION_JSON)
	public Response listarEmpregadosAtivo() throws Exception {
		List<Empregado> lista = Banco.listarEmpregadoAtivo();		
		GenericEntity<List<Empregado>> entity = new GenericEntity<List<Empregado>>(lista) {};
		return Response.ok().entity(entity).build();
	}